FROM golang:1.9-stretch
MAINTAINER Lars Gierth <lgierth@ipfs.io>

# This is a copy of /Dockerfile,
# except that we optimize for build time, instead of image size.
#
# Please keep these two Dockerfiles in sync.

ENV GX_IPFS ""
ENV SRC_DIR /go/src/github.com/ipfs/go-ipfs

COPY ./package.json $SRC_DIR/package.json

RUN set -x \
  && go get github.com/whyrusleeping/gx \
  && go get github.com/whyrusleeping/gx-go \
  # Allows using a custom (i.e. local) IPFS API endpoint.
  && ([ -z "$GX_IPFS" ] || echo $GX_IPFS > /root/.ipfs/api) \
  # Fetch the dependencies so we don't have to do it everytime.
  && cd $SRC_DIR \
  && gx install

COPY . $SRC_DIR

# Build the thing.
RUN set -x \
  && cd $SRC_DIR \
  # Required for getting the HEAD commit hash via git rev-parse.
  && mkdir .git/objects \
  # Build the thing.
  && make build \
  && mv cmd/ipfs/ipfs /usr/local/bin/ipfs \
  && mv bin/container_daemon /usr/local/bin/start_ipfs

# This installs a very simple program acting as the init process.
# Makes sure signals are properly passed to the ipfs daemon process.
ENV TINI_VERSION v0.16.1
ADD https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini /sbin/tini
RUN chmod +x /sbin/tini

# Ports for Swarm TCP, Swarm uTP, API, Gateway, Swarm Websockets
EXPOSE 4001
EXPOSE 4002/udp
EXPOSE 5001
EXPOSE 8080
EXPOSE 8081

# Create the fs-repo directory and switch to a non-privileged user.
ENV IPFS_PATH /data/ipfs
RUN mkdir -p $IPFS_PATH \
  && useradd -s /usr/sbin/nologin -d $IPFS_PATH -u 1000 -g 100 ipfs \
  && chown 1000:100 $IPFS_PATH
USER ipfs

# Expose the fs-repo as a volume.
# start_ipfs initializes an fs-repo if none is mounted.
# Important this happens after the USER directive so permission are correct.
VOLUME $IPFS_PATH

# The default logging level
ENV IPFS_LOGGING ""

# This just makes sure that:
# 1. There's an fs-repo, and initializes one if there isn't.
# 2. The API and Gateway are accessible from outside the container.
ENTRYPOINT ["/sbin/tini", "--", "/usr/local/bin/start_ipfs"]

# Execute the daemon subcommand by default
CMD ["daemon", "--migrate=true"]
